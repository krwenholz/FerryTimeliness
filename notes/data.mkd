# Data formats
* arrival and departure data (times in seconds after midnight):
    <boat name>, <departure/arrival location>, <departure/arrival destination>, <estimated time>, <actual time>, <date>
* weather data:
     <date>, <time>, <sky condition>, <visibility>, <dry bulb F>, <wet bulb F>, <dew point F>, <relative humidity>, <wind speed>, <wind direction>, <station pressure>, <altimeter>


# Database SQL commands
    ferry_data=# CREATE TABLE  departure_data(id bigserial PRIMARY KEY, vessel varchar(20), departing varchar(40), arriving varchar(40), scheduled_departure int, actual_departure int, date date);
    NOTICE:  CREATE TABLE will create implicit sequence "departure_data_id_seq" for serial column "departure_data.id"
    NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "departure_data_pkey" for table "departure_data"
    CREATE TABLE
    ferry_data=# GRANT INSERT, DELETE, UPDATE, SELECT ON departure_data TO ferry_user;
    GRANT
    ferry_data=# CREATE TABLE  arrival_data(id bigserial PRIMARY KEY, vessel varchar(20), departing varchar(40), arriving varchar(40), scheduled_arrival int, actual_arrival int, date date);
    NOTICE:  CREATE TABLE will create implicit sequence "arrival_data_id_seq" for serial column "arrival_data.id"
    NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "arrival_data_pkey" for table "arrival_data"
    CREATE TABLE
    ferry_data=# GRANT INSERT, DELETE, UPDATE, SELECT ON arrival_data TO ferry_user;
    GRANT
    ferry_data=# 

# Data scrub finds
bad timings =  396
bad data type =  9037
good data =  331468

# Data transformations for the SVM 
LibSVM provides many tips I'll be following.
* To avoid future problems with scaling, I think I'll take the max of each attribute,
multiply by 1.5, and then divide everything by that to get it all in [-1,1].
This should also get close to future-proofing things in terms of the scaling
of test data (e.g. real life data).
* Categorization will have to take place with an attribute for each boat, location
etc.  The problem here is to also train with an unknown for each of these 
(in case a new boat is added or new destination).  I might not do this on the
first round, but it'll probably come in at some point.
* Everything has to be a number: times, weather, all of it.
* v-fold cross validation will be used.  This involves partitioning the data
into v subsets, training on v-1 subsets, and checking the untrained subset
for accuracy. 
* I'll need a late-or-not field in my data points.


